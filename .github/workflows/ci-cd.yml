name: ci - cd

on:
  push:
  release:
    types: [published]

jobs:
  validate_branch_commit:
    name: Validate Branch and Commit Message
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Dependencies
        run: npm ci

      - name: Validate branch name
        run: bash .husky/scripts/validate-branch-names.sh
        env:
          BRANCH_NAME: ${{ github.head_ref }}

  lint-build-audit:
    name: lint
    runs-on: ubuntu-latest
    needs: [validate_branch_commit]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run build
        run: npm run build

      - name: Run Audit-CI to check for vulnerabilities
        run: npm run audit-ci

  tests:
    name: tests
    runs-on: ubuntu-latest
    needs: [lint-build-audit]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports to codeclimate
        uses: paambaati/codeclimate-action@v8.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPO_TOKEN }}
        with:
          debug: true

  release_draft:
    name: release_drafter
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.ref == 'refs/heads/develop' # Ensure this only runs on develop branch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Release Drafter
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-config.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PA_TOKEN }}

  create_release:
    needs: [release_draft]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Ensure this only runs on main branch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PA_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
