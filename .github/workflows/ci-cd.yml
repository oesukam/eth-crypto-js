name: ci - cd

on:
  push:
  release:
    types: [published]

jobs:
  validate_branch_commit:
    name: Validate Branch and Commit Message
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Dependencies
        run: yarn install

      - name: Validate branch name
        run: bash .husky/scripts/validate-branch-names.sh
        env:
          BRANCH_NAME: ${{ github.head_ref }}

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: [validate_branch_commit]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Dependencies
        run: yarn install

      - name: Run linter
        run: npm run lint

  audit_ci:
    name: audit_ci
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Dependencies
        run: yarn install

      - name: Run Audit-CI to check for vulnerabilities
        run: npm run audit-ci

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [audit_ci]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Dependencies
        run: yarn install

      - name: Run build
        run: npm run build
  tests:
    name: tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports to codeclimate
        uses: paambaati/codeclimate-action@v8.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPO_TOKEN }}
        with:
          debug: true
  release:
    runs-on: ubuntu-latest
    needs: [tests]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }} # Publish coverage only for push commits, not PRs.
    steps:
      - uses: actions/checkout@v4
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GH_PA_TOKEN }}
          version-file: './package.json,./package-lock.json'
          output-file: 'false'

      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
